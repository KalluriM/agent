{"version":3,"sources":["./src/app/_components/agent-status/agent-status.component.ts","./src/app/_components/agent-status/agent-status.component.html","./src/app/_code/custom-formatter.ts","./src/environments/environment.ts","./src/app/app-material.module.ts","./src/app/_call/disposition-tools/disposition-tools.component.ts","./src/app/_call/disposition-tools/disposition-tools.component.html","./src/app/_call/task-status/task-status.component.ts","./src/app/_call/task-status/task-status.component.html","./src/app/_call/phone-status/phone-status.component.ts","./src/app/_call/phone-status/phone-status.component.html","./src/app/mat-dialog/mat-dialog.component.ts","./src/app/mat-dialog/mat-dialog.component.html","./src/app/_components/recent-calls/recent-calls.component.ts","./src/app/_components/recent-calls/recent-calls.component.html","./src/app/auth/phone-selection/phone-selection.component.ts","./src/app/auth/phone-selection/phone-selection.component.html","./src/app/_shared/backend.service.ts","./src/app/auth/connect/connect.component.ts","./src/app/auth/connect/connect.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/_interfaces/chat.message.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_layout/app-layout/app-layout.component.ts","./src/app/_layout/app-layout/app-layout.component.html","./src/app/app.module.ts","./src/app/_code/manager-environment.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/_components/agent-list/agent-list.component.ts","./src/app/_components/agent-list/agent-list.component.html","./src/app/_navigation/nav-sidebar/nav-sidebar.component.ts","./src/app/_navigation/nav-sidebar/nav-sidebar.component.html","./src/app/_code/custom-clock.ts","./src/app/_call/ongoing-status/ongoing-status.component.ts","./src/app/_call/ongoing-status/ongoing-status.component.html","./src/app/auth/server-selection/server-selection.component.ts","./src/app/auth/server-selection/server-selection.component.html","./src/app/_navigation/nav-topbar/nav-topbar.component.ts","./src/app/_navigation/nav-topbar/nav-topbar.component.html","./src/app/_layout/login-layout/login-layout.component.ts","./src/app/_layout/login-layout/login-layout.component.html","./src/app/app-routing.module.ts","./src/app/_components/messenger/messenger.component.ts","./src/app/_components/messenger/messenger.component.html","./src/main.ts","./src/app/_shared/shared-data.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { QueueUpdate } from \"src/app/_interfaces/queue-update\";\r\nimport { BackendService } from \"src/app/_shared/backend.service\";\r\nimport { SharedDataService } from \"src/app/_shared/shared-data.service\";\r\nimport { ServerConnection } from \"jema\";\r\n\r\n@Component({\r\n  selector: \"app-agent-status\",\r\n  templateUrl: \"./agent-status.component.html\",\r\n  styleUrls: [\"./agent-status.component.css\"],\r\n})\r\nexport class AgentStatusComponent implements OnInit {\r\n  bus: ServerConnection;\r\n  info: any;\r\n  time: any;\r\n  duration: any;\r\n  cdate = new Date();\r\n  task: any;\r\n  taskAssigned: boolean;\r\n  currentprogress: any;\r\n  completed: any;\r\n  interval;\r\n  phoneState: any;\r\n  queueUpdates: Array<QueueUpdate> = [];\r\n  crms: any;\r\n  nodata = true;\r\n  color: string;\r\n  ahtTarget: number;\r\n\r\n  constructor(\r\n    private service: BackendService,\r\n    public recentCall: SharedDataService\r\n  ) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bus.queueUpdates.subscribe((queueUpdates) => {\r\n      this.queueUpdates = queueUpdates;\r\n    });\r\n\r\n    this.bus.task.subscribe((task) => {\r\n      if (task === null || task === undefined) {\r\n        this.taskAssigned = false;\r\n        this.ahtTarget = null;\r\n        clearInterval(this.interval);\r\n        this.currentprogress = 0;\r\n        this.completed = null;\r\n      } else {\r\n        this.taskAssigned = true;\r\n      }\r\n\r\n      this.task = task;\r\n      this.crms = [];\r\n      this.nodata = true;\r\n      if (\r\n        this.task &&\r\n        this.task.queue &&\r\n        this.task.queue.crms &&\r\n        this.task.queue.crms.length > 0\r\n      ) {\r\n        this.crms = this.task.queue.crms;\r\n        this.nodata = false;\r\n      }\r\n\r\n      if (this.task && this.task.call.attributes.destconnectedlinenum) {\r\n        if (this.task.call.attributes.destconnectedlinenum.startsWith(\"+91\")) {\r\n          this.task.call.attributes.destconnectedlinenum = this.task.call.attributes.destconnectedlinenum.substring(\r\n            3\r\n          );\r\n        }\r\n        clearInterval(this.interval);\r\n        if (this.task.queue.baseQueueOptions.ahtTarget) {\r\n          this.ahtTarget = this.task.queue.baseQueueOptions.ahtTarget;\r\n          this.currentprogress = 0;\r\n          this.startTimer();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.bus.agentInfo.subscribe((res) => {\r\n      this.info = res;\r\n    });\r\n\r\n    this.bus.phoneState.subscribe((state) => {\r\n      this.phoneState = state;\r\n      switch (this.phoneState.state) {\r\n        case \"Unknown\":\r\n          clearInterval(this.interval);\r\n          break;\r\n        case \"INUSE\":\r\n          break;\r\n        case \"Not in use\":\r\n          clearInterval(this.interval);\r\n        case \"NOT_INUSE\":\r\n          clearInterval(this.interval);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  GetDuration(seconds) {\r\n    const h = Math.floor(seconds / 3600);\r\n    const m = Math.floor((seconds % 3600) / 60);\r\n    const s = Math.floor((seconds % 3600) % 60);\r\n    const hDisplay = h > 0 ? h + (h === 1 ? \" h \" : \" h \") : \"\";\r\n    const mDisplay = m > 0 ? m + (m === 1 ? \" min \" : \" min \") : \"\";\r\n    const sDisplay = s > 0 ? s + (s === 1 ? \" s\" : \" s\") : \"\";\r\n    return hDisplay + mDisplay + sDisplay;\r\n  }\r\n\r\n  startTimer() {\r\n    this.interval = setInterval(() => {\r\n      this.currentprogress += 1;\r\n      this.completed = (this.currentprogress / this.ahtTarget) * 100;\r\n      this.color = \"green\";\r\n      if (this.currentprogress > this.ahtTarget) {\r\n        this.color = \"red\";\r\n        // clearInterval(this.interval);\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-3\">\r\n    <div class=\"card border-info\">\r\n      <div class=\"card-header bg-info text-white\">Agent Info\r\n        <i class=\"material-icons pull-right\" style=\"font-size:28px;\">perm_identity</i>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\"> Name :</p>\r\n          <p class=\"text-right float-right\"> {{info?.agentInfo.agentName}}</p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\">EmpId :</p>\r\n          <p class=\"text-right float-right\"> {{info?.agentInfo.userId}}</p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\"> First LogIn : </p>\r\n          <p class=\"text-right float-right\">{{info?.agentInfo.firstLogin | date :'mediumTime'}}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-3\">\r\n    <div class=\"card border-danger\">\r\n      <div class=\"card-header bg-danger text-white\">Live Call Info\r\n        <i class=\"material-icons pull-right\" style=\"font-size:28px;\">hourglass_empty</i>\r\n      </div>\r\n      <div class=\"card-body\">\r\n\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\"> Start Time :</p>\r\n          <p class=\"text-right float-right\"> {{task?.call.dateReceived | date :'mediumTime'}} </p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\">AHT Target :</p>\r\n          <p class=\"text-right float-right\"><span>{{GetDuration(ahtTarget)}}</span>\r\n          </p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <div class=\"progress\">\r\n            <div class=\"progress-bar {{color}}\" role=\"progressbar\" aria-valuenow=\"currentprogress\" aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\" [style.width.%]=\"completed\">\r\n              <span style=\"font-size: 15px;\"> {{GetDuration(currentprogress)}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-3\">\r\n    <div class=\"card border-success\">\r\n      <div class=\"card-header bg-success text-white\">Call Details\r\n        <i class=\"material-icons pull-right\" style=\"font-size:28px;\">phone</i>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\"> Campaign :</p>\r\n          <p class=\"text-right float-right\"> {{task?.call.queue}} </p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\"> Cli :</p>\r\n          <p class=\"text-right float-right\"> {{task?.call.attributes.destconnectedlinenum}} </p>\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <p class=\"card-text float-left text-secondary\">Call Number :</p>\r\n          <p class=\"text-right float-right\">{{task?.call.attributes.linkedid}} </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-3\">\r\n    <div class=\"card border-secondary\">\r\n      <div class=\"card-header bg-secondary text-white\">CRM's\r\n        <i class=\"material-icons pull-right\" style=\"font-size:28px;\">list</i>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"col-md-4 pl-5 text-center\" *ngIf=\"nodata\">\r\n          <img style=\"height: 120px;\" src=\"assets/nodata.png\" alt=\"Xema\">\r\n        </div>\r\n        <div class=\"clearfix\">\r\n          <mat-chip-list class=\"mat-chip-list-stacked\" *ngFor=\"let crm of crms\">\r\n            <a href=\"{{crm.url}}\" target=\"_blank\">\r\n              <mat-chip selected>\r\n                {{crm.name}}\r\n              </mat-chip>\r\n            </a>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { TimeagoFormatter } from 'ngx-timeago';\r\n\r\nexport class CustomFormatter implements TimeagoFormatter {\r\n\r\n    format(then: number): string {\r\n        const now = Date.now();\r\n\r\n        let totalUnits = Math.round(Math.abs(now - then) / 1000);\r\n\r\n        const seconds = totalUnits % 60;\r\n        totalUnits -= seconds;\r\n        totalUnits /= 60;\r\n\r\n        const minutes = totalUnits % 60;\r\n        totalUnits -= minutes;\r\n        totalUnits /= 60;\r\n\r\n        let str = '';\r\n\r\n        if (totalUnits > 0) {\r\n            str += totalUnits + 'h ';\r\n        }\r\n\r\n        if (minutes > 0) {\r\n            str += minutes + 'm ';\r\n        }\r\n\r\n        if (seconds > 0) {\r\n            str += seconds + 's ';\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  backend: ''\r\n  // backend: 'http://manager.xema.in:8080' // manager.xema.in\r\n  // backend: 'http://192.168.29.60'\r\n  // backend: 'http://172.23.179.133' // test\r\n  // backend: 'http://172.23.179.157' // production\r\n  // backend: 'http://223.196.176.248:8080' // production\r\n  // backend: 'http://223.196.176.248:8081' // test\r\n  // backend: 'https://localhost:44394'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { NgModule } from '@angular/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\n\r\n@NgModule({\r\n\r\n  exports: [\r\n    MatButtonModule, MatCardModule, MatDialogModule, MatTableModule, MatSortModule,\r\n    MatInputModule, MatDatepickerModule, MatNativeDateModule, MatAutocompleteModule,\r\n    MatTabsModule, MatSidenavModule, MatBadgeModule, MatFormFieldModule, MatIconModule,\r\n    MatToolbarModule, MatDividerModule, MatGridListModule, MatSelectModule, MatProgressBarModule,\r\n    MatChipsModule, MatPaginatorModule,\r\n  ],\r\n\r\n})\r\nexport class AppMaterialComponentsModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { BackendService } from \"src/app/_shared/backend.service\";\r\nimport { FormControl, FormGroupDirective, NgForm } from \"@angular/forms\";\r\nimport { ActiveCall } from \"src/app/_interfaces/active-call\";\r\nimport { Channel } from \"src/app/_interfaces/channel\";\r\nimport { SharedDataService } from \"src/app/_shared/shared-data.service\";\r\nimport { ServerConnection } from \"jema\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"app-disposition-tools\",\r\n  templateUrl: \"./disposition-tools.component.html\",\r\n  styleUrls: [\"./disposition-tools.component.css\"],\r\n})\r\nexport class DispositionToolsComponent implements OnInit {\r\n  bus: ServerConnection;\r\n  ongoingCallsList: Array<ActiveCall>;\r\n  parkedCallsList: Array<Channel>;\r\n  callerOnline: boolean;\r\n  task: any;\r\n  taskAssigned: boolean;\r\n  selectedvalue: any;\r\n  selectedtext: any;\r\n  parked: any;\r\n  cdate = new Date();\r\n  calldetails: any;\r\n  disable: boolean;\r\n  number = new FormControl(\"\", [\r\n    // Validators.required\r\n  ]);\r\n  queueCall: any;\r\n  isCallBack: boolean;\r\n  isEndCall: boolean;\r\n  phoneState: any;\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private service: BackendService,\r\n    public shared: SharedDataService,\r\n    public dialog: MatDialog,\r\n    public recentCall: SharedDataService\r\n  ) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disable = false;\r\n\r\n    this.bus.task.subscribe((task) => {\r\n      if (task === null || task === undefined) {\r\n        this.taskAssigned = false;\r\n      } else {\r\n        this.taskAssigned = true;\r\n        this.disable = false;\r\n      }\r\n      this.task = task;\r\n      if (this.task && this.task.queue.baseQueueOptions.allowEndCall) {\r\n        this.isEndCall = true;\r\n      }\r\n      if (this.task && this.task.queue.baseQueueOptions.allowCallback) {\r\n        this.isCallBack = true;\r\n      }\r\n    });\r\n\r\n    this.bus.ongoingCalls.subscribe((list) => {\r\n      this.ongoingCallsList = list;\r\n      if (this.task !== null && this.task !== undefined) {\r\n        if (list.find((x) => x.cli === this.task.call.attributes.calleridnum)) {\r\n          this.callerOnline = true;\r\n        } else {\r\n          this.callerOnline = false;\r\n          // this.autoDispose();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.bus.parkedChannels.subscribe((list) => {\r\n      this.parkedCallsList = list;\r\n      this.parked =\r\n        this.parkedCallsList[0] != null ? this.parkedCallsList[0].status : \"\";\r\n    });\r\n\r\n    this.bus.task.subscribe((queueCall) => {\r\n      this.queueCall = queueCall;\r\n      if (\r\n        this.queueCall &&\r\n        this.queueCall.queue &&\r\n        this.queueCall.queue.crms &&\r\n        this.queueCall.queue.crms.length > 0\r\n      ) {\r\n        this.openNewtab();\r\n      }\r\n    });\r\n\r\n    this.bus.phoneState.subscribe((state) => {\r\n      this.phoneState = state;\r\n      switch (this.phoneState.state) {\r\n        case \"Unknown\":\r\n          if (this.task && this.task.queue.baseQueueOptions.allowEndCall) {\r\n            this.isEndCall = false;\r\n          }\r\n          if (this.task && this.task.queue.baseQueueOptions.allowCallback) {\r\n            this.isCallBack = true;\r\n          }\r\n          break;\r\n        case \"INUSE\":\r\n          if (this.task && this.task.queue.baseQueueOptions.allowCallback) {\r\n            this.isCallBack = false;\r\n          }\r\n          break;\r\n        case \"Not in use\":\r\n        case \"NOT_INUSE\":\r\n          if (this.task && this.task.queue.baseQueueOptions.allowEndCall) {\r\n            this.isEndCall = false;\r\n          }\r\n          if (this.task && this.task.queue.baseQueueOptions.allowCallback) {\r\n            this.isCallBack = true;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewtab() {\r\n    this.queueCall.queue.crms.forEach((item, index) => {\r\n      window.open(item.url, index);\r\n    });\r\n  }\r\n\r\n  callBack() {\r\n    if (this.task.queue.baseQueueOptions.allowEndCall) {\r\n      this.isEndCall = true;\r\n    }\r\n    this.bus.call(\r\n      this.task.queue.baseQueueOptions.callbackTrunkName,\r\n      this.task.call.attributes.calleridnum,\r\n      this.task.call.attributes.linkedid\r\n    );\r\n  }\r\n\r\n  endCall() {\r\n    // find all channels in ConfBridge & hangup\r\n    if (this.ongoingCallsList.length !== 0) {\r\n      this.ongoingCallsList.forEach((channel) => {\r\n        const localchannel = channel.localChannel;\r\n        const rmchannels = channel.remoteChannel.split(\",\");\r\n        const removeconf = rmchannels.shift();\r\n        rmchannels.push(localchannel);\r\n        if (rmchannels) {\r\n          rmchannels.forEach((ch) => {\r\n            this.bus.hangupCall(ch);\r\n          });\r\n        }\r\n      });\r\n\r\n      this.isEndCall = false;\r\n      this.isCallBack = true;\r\n    }\r\n\r\n    // check if the original call is active\r\n    if (\r\n      this.ongoingCallsList.find(\r\n        (x) => x.remoteChannel === this.task.call.channel\r\n      )\r\n    ) {\r\n      this.bus.hangupCall(this.task.call.channel);\r\n    } else {\r\n      // find the channel and disconnect\r\n      const ch = this.ongoingCallsList.find(\r\n        (x) => x.cli === this.task.call.attributes.calleridnum\r\n      );\r\n      if (ch !== undefined) {\r\n        this.bus.hangupCall(ch.remoteChannel);\r\n      }\r\n    }\r\n    this.parked = \"\";\r\n  }\r\n\r\n  call() {\r\n    if (this.task.queue.baseQueueOptions.allowEndCall) {\r\n      this.isEndCall = true;\r\n    }\r\n    this.bus.call(\r\n      this.task.queue.baseQueueOptions.callbackTrunkName,\r\n      this.number.value,\r\n      this.task.call.attributes.linkedid\r\n    );\r\n    this.parked =\r\n      this.parkedCallsList[0] != null ? this.parkedCallsList[0].status : \"\";\r\n  }\r\n\r\n  conference() {\r\n    this.ongoingCallsList.forEach((otherCall) => {\r\n      this.bus.hold(otherCall.remoteChannel);\r\n    });\r\n\r\n    const listActive = this.ongoingCallsList.map((x) => x.remoteChannel);\r\n    const listParked = this.parkedCallsList.map((x) => x.channel);\r\n    const total = listActive.concat(listParked);\r\n    this.bus.conference(total);\r\n    this.parked =\r\n      this.parkedCallsList[0] != null ? this.parkedCallsList[0].status : \"\";\r\n  }\r\n\r\n  dispose() {\r\n    this.bus.dispose();\r\n    this.disable = false;\r\n  }\r\n}\r\n","<div *ngIf=\"taskAssigned\">\r\n\r\n  <!-- Standard Actions -->\r\n  <div class=\"row pl-3\">\r\n\r\n    <!-- Call Back Option -->\r\n    <div class=\"col-sm\" *ngIf=\"!callerOnline && isCallBack && task.queue.baseQueueOptions.allowCallback\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"callBack()\">Call Back</button>\r\n    </div>\r\n\r\n    <!-- End Call Option -->\r\n    <div class=\"col-sm\" *ngIf=\"isEndCall && task.queue.baseQueueOptions.allowEndCall\">\r\n      <button mat-raised-button color=\"warn\" (click)=\"endCall()\">End Call</button>\r\n    </div>\r\n\r\n    <!-- Add Call Option -->\r\n    <div class=\"row\" *ngIf=\"task.queue.baseQueueOptions.allowNewCall\">\r\n      <form class=\"col-sm input-group\" autocomplete=\"off\">\r\n        <input type=\"text\" class=\"col-xs form-control\" placeholder=\"Enter Number\" [formControl]=\"number\">\r\n        <div class=\"input-group-append\">\r\n          <button class=\"btn btn-success\" type=\"button\" (click)=\"call()\">\r\n            <i class=\"material-icons pull-right\">phone</i></button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- Conference Option -->\r\n    <div class=\"col-sm\" *ngIf=\"task.queue.baseQueueOptions.allowConference && parked === 'Parked'\">\r\n      <button mat-raised-button color=\"link\" style=\"background-color: #ffc107;\" (click)=\"conference()\">\r\n        Merge\r\n        <i class=\"material-icons\">call_merge</i>\r\n      </button>\r\n\r\n    </div>\r\n\r\n    <!-- Canned Actions -->\r\n    <!-- <div>\r\n        </div> -->\r\n\r\n    <!-- Dispose Call -->\r\n    <div class=\"col-sm\" *ngIf=\"!callerOnline && parked !== 'Parked'\">\r\n      <button [ngStyle]=\"{'pointer-events': disable ? 'none': ''}\" mat-raised-button color=\"warn\"\r\n        (click)=\"dispose()\">Dispose</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport { Router } from '@angular/router';\r\nimport { ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-task-status',\r\n  templateUrl: './task-status.component.html'\r\n\r\n})\r\nexport class TaskStatusComponent implements OnInit {\r\n\r\n  bus: ServerConnection;\r\n  task: any;\r\n  taskAssigned: boolean;\r\n\r\n  constructor(private service: BackendService, private router: Router) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.bus.task.subscribe((task) => {\r\n      if (task === null || task === undefined) {\r\n        this.taskAssigned = false;\r\n      } else {\r\n        this.taskAssigned = true;\r\n      }\r\n      this.task = task;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<span *ngIf=\"taskAssigned\" class=\"btn btn-sm btn-secondary py-2\">\r\n  <!-- <span class=\"mat-button-wrapper\"> Q: {{task.queue.name}} ({{task.call.attributes.destcalleridnum}}) </span>\r\n <span class=\"mat-button-wrapper\"> C: {{task.call.attributes.calleridnum}} ({{task.call.attributes.calleridname}}) </span> -->\r\n  <span class=\"mat-button-wrapper\"> Q: {{task.call.queue}} </span>\r\n  &nbsp;|&nbsp;\r\n  <span class=\"mat-button-wrapper\"> C: {{task.call.attributes.calleridnum}}</span>\r\n</span>","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from '../../_shared/backend.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { ServerConnection } from 'jema';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\n\r\n@Component({\r\n  selector: 'app-phone-status',\r\n  templateUrl: './phone-status.component.html',\r\n  styleUrls: ['./phone-status.component.css']\r\n})\r\nexport class PhoneStatusComponent implements OnInit {\r\n\r\n  bus: ServerConnection;\r\n  phoneState: any;\r\n  onHook: boolean;\r\n  btnColor: string;\r\n\r\n  constructor(private service: BackendService, private router: Router) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.bus.phoneState.subscribe((state) => {\r\n      this.phoneState = state;\r\n\r\n      this.onHook = true;\r\n      switch (this.phoneState.state) {\r\n        case 'Unknown':\r\n          this.btnColor = 'btn-secondary';\r\n          break;\r\n        case 'INUSE':\r\n          this.onHook = false;\r\n          this.btnColor = 'btn-danger';\r\n          break;\r\n        case 'Not in use':\r\n        case 'NOT_INUSE':\r\n          this.btnColor = 'btn-success';\r\n          break;\r\n        default:\r\n          this.btnColor = 'btn-success';\r\n          break;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  unassignPhone() {\r\n    if (!this.onHook) {\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'This will change the phone you are currently using!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, change'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n\r\n        this.bus.unassignPhone().subscribe(() => {\r\n          this.router.navigateByUrl('/phone');\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<span [ngClass]=\"btnColor\" class=\"btn btn-sm\">\r\n  <span style=\"position: relative;top: -5px;\">\r\n    <span (click)=\"unassignPhone()\">\r\n      <mat-icon style=\"position: relative; top:7px;\">contact_phone</mat-icon>\r\n      &nbsp;\r\n      <span>{{phoneState.device}}</span>\r\n    </span>\r\n    <!-- &nbsp; <span>|</span> &nbsp;\r\n    <span *ngIf=\"phoneState.state !== 'INUSE'\">{{phoneState.state}}</span> -->\r\n  </span>\r\n</span>","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { BackendService } from \"../_shared/backend.service\";\r\nimport { SharedDataService } from \"../_shared/shared-data.service\";\r\nimport { ServerConnection } from \"jema\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n@Component({\r\n  selector: \"app-mat-dialog\",\r\n  templateUrl: \"./mat-dialog.component.html\",\r\n  styleUrls: [\"./mat-dialog.component.css\"],\r\n})\r\nexport class MatDialogComponent implements OnInit {\r\n  bus: ServerConnection;\r\n\r\n  breaktype = new FormControl(\"\", [Validators.required]);\r\n  reason = new FormControl(\"\", [Validators.required]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<MatDialogComponent>,\r\n    private service: BackendService,\r\n    public recentCall: SharedDataService\r\n  ) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  onConfirmClick(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  onChangeType(event): void {\r\n    const breaktype = event;\r\n    if (breaktype !== 0) {\r\n      this.reason.setValue(\"\");\r\n      this.reason.clearValidators();\r\n      this.reason.updateValueAndValidity();\r\n    }\r\n    if (breaktype === 0) {\r\n      this.reason.setValidators([Validators.required]);\r\n      this.reason.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  Submit() {\r\n    if (\r\n      (this.breaktype.value !== 0 && this.breaktype.valid) ||\r\n      (this.breaktype.value === 0 && this.reason.valid)\r\n    ) {\r\n      this.bus.askBreak2(this.breaktype.value, this.reason.value);\r\n      this.onConfirmClick();\r\n    }\r\n  }\r\n}\r\n","<div style=\"width:600px;\">\r\n  <br>\r\n  <br>\r\n  <div mat-dialog-content class=\"text-center\">\r\n    <form class=\"breakForm\" autocomplete=\"off\">\r\n      <div class=\"col-md-12\">\r\n        <mat-form-field class=\"example-full-width w-75\">\r\n          <mat-label>Select Break Type</mat-label>\r\n          <mat-select (ngModelChange)=\"onChangeType($event)\" [formControl]=\"breaktype\" [errorStateMatcher]=\"matcher\">\r\n            <mat-option>Select Break Type</mat-option>\r\n            <mat-option *ngFor=\"let break of data.info.breakTypes\" [value]=\"break.btCode\">\r\n              {{break.description}}\r\n            </mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"breaktype.hasError('required')\">\r\n            Break Type is <strong>required</strong>\r\n          </mat-error>\r\n          <mat-error *ngIf=\"breaktype.hasError('required') && !breaktype.hasError('required')\">\r\n            Please choose Break Type\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-md-12\" *ngIf=\"breaktype.value === 0\">\r\n        <mat-form-field class=\"example-full-width w-75\">\r\n          <textarea matInput placeholder=\"Give a reason\" [formControl]=\"reason\" [errorStateMatcher]=\"matcher\">\r\n      </textarea>\r\n          <mat-error *ngIf=\"reason.hasError('reason') && !reason.hasError('required')\">\r\n            Please enter Reason\r\n          </mat-error>\r\n          <mat-error *ngIf=\"reason.hasError('required')\">\r\n            Reason <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <br>\r\n        <button mat-raised-button color=\"primary\" (click)=\"Submit()\">Request</button>&nbsp;\r\n        <button mat-stroked-button [mat-dialog-close]=\"\" color=\"primary\">Dismiss</button>\r\n      </div>\r\n      <br>\r\n      <br>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport { Router } from '@angular/router';\r\nimport { SharedDataService } from 'src/app/_shared/shared-data.service';\r\nimport { ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-recent-calls',\r\n  templateUrl: './recent-calls.component.html',\r\n  styleUrls: ['./recent-calls.component.css']\r\n})\r\nexport class RecentCallsComponent implements OnInit {\r\n  bus: ServerConnection;\r\n\r\n\r\n  constructor(private service: BackendService, private router: Router, public recentCall: SharedDataService) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"my-3\">\r\n  <div class=\"d-flex flex-row\">\r\n    <div class=\"p-1\">\r\n      <i class=\"material-icons text-secondary\" style=\"margin-top: -2px;\">access_time</i>\r\n    </div>\r\n    <div class=\"p-1\">\r\n      <h6 class=\"font-weight-normal text-secondary\">Recent Calls</h6>\r\n    </div>\r\n  </div>\r\n  <div class=\"table-responsive\">\r\n    <table *ngIf=\"recentCall.callinfolist?.length != 0\" class=\"table table-bordered table-hover\">\r\n      <thead>\r\n        <tr class=\"bg-secondary text-white\">\r\n          <!-- <th><small>SNo</small></th> -->\r\n          <th><small>Queue</small></th>\r\n          <th><small>Call Number</small></th>\r\n          <th><small>Cli</small></th>\r\n          <th><small>StartTime</small></th>\r\n          <th><small>EndTime</small></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let call of recentCall.callinfolist; let i=index\">\r\n          <!-- <td>{{i +1}}</td> -->\r\n          <td>{{call.queue}}</td>\r\n          <td>{{call.callNumber}}</td>\r\n          <td>{{call.cli}}</td>\r\n          <td>{{call.startTime | date :'medium'}}</td>\r\n          <td>{{call.endTime | date :'medium'}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"clearfix\" *ngIf=\"recentCall.callinfolist?.length == 0\">\r\n      <p class=\"text-secondary display-4\">No recent calls </p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport Swal from 'sweetalert2';\r\nimport { DeviceMapParameters } from 'src/app/_interfaces/device.map';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-phone-selection',\r\n  templateUrl: './phone-selection.component.html',\r\n  styleUrls: ['./phone-selection.component.css']\r\n})\r\nexport class PhoneSelectionComponent implements OnInit {\r\n\r\n  bus: ServerConnection;\r\n  public phoneSelectionForm: FormGroup;\r\n  manager: string;\r\n  isLoading = false;\r\n  disable: boolean;\r\n\r\n  constructor(private service: BackendService) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disable = false;\r\n    this.manager = ManagerEnvironment.getBackendUrl();\r\n\r\n    this.bus.IsPhoneMapped().subscribe(\r\n      (data: any) => {\r\n        this.reconnectDevice(data.phone);\r\n      },\r\n      () => {\r\n        // console.error(err);\r\n      }\r\n    );\r\n\r\n    this.phoneSelectionForm = new FormGroup({\r\n      deviceName: new FormControl('', [Validators.required, Validators.maxLength(4), Validators.pattern('[0-9]*')]),\r\n    });\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.phoneSelectionForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  mapDevice() {\r\n    this.mapPhone(this.phoneSelectionForm.value);\r\n  }\r\n\r\n  reconnectDevice(phone: string) {\r\n    this.mapPhone({ deviceName: phone });\r\n  }\r\n\r\n  mapPhone(param: DeviceMapParameters) {\r\n    this.disable = true;\r\n    this.isLoading = true;\r\n    this.bus.mapPhone(param).subscribe(\r\n      (data: any) => {\r\n        this.isLoading = false;\r\n        this.service.setAppState({ state: 'Ready' });\r\n        if (data.teamLead) {\r\n          console.log('Enabling Team Lead features...');\r\n          this.service.enableTeamLeadFeatures(true);\r\n        }\r\n        this.disable = false;\r\n      },\r\n      err => {\r\n        console.error(err);\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        if (err.response !== undefined) { err = err.response; }\r\n\r\n        if (err.status === 400) {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error Activating Phone',\r\n            text: err.data\r\n          });\r\n\r\n        } else {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err.message\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n","\r\n<form [formGroup]=\"phoneSelectionForm\" autocomplete=\"off\" (ngSubmit)=\"mapDevice()\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"> </mat-progress-bar>\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title>Agent</mat-card-title>\r\n      <mat-card-subtitle>Welcome back</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        You logged in successfully.<br><br>\r\n        We now need the phone number you would be using to receive the calls from queues.\r\n        Enter the 4 digit extention number you are currently using.\r\n      </div>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Phone Number\" formControlName=\"deviceName\" id=\"phone\">\r\n        <mat-error *ngIf=\"hasError('deviceName', 'required')\">Phone Number is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('deviceName', 'pattern')\">Special characters are not allowed</mat-error>\r\n        <mat-error *ngIf=\"hasError('deviceName', 'maxlength')\">4 characters max.</mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\"  [disabled]=\"!phoneSelectionForm.valid || disable\">SUBMIT</button>\r\n      <a href=\"{{manager}}\" target=\"_manager\" mat-button color=\"secondary\">MANAGE</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { ServerConnection } from 'jema';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BackendService {\r\n\r\n  private serverConnection: ServerConnection;\r\n  public appState = new BehaviorSubject<any>({ state: 'Unknown' });\r\n  public teamLeadFeatures = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  setAppState(state: any): void {\r\n    this.appState.next(state);\r\n  }\r\n\r\n  enableTeamLeadFeatures(flag: boolean) {\r\n    this.teamLeadFeatures.next(flag);\r\n  }\r\n\r\n  // pingServer(ip) {\r\n  //   return this.remote.get(ip + '/api/Setup/Ping');\r\n  // }\r\n\r\n  getToken(): string {\r\n    return localStorage.getItem('access_token');\r\n  }\r\n\r\n  saveToken(token: string) {\r\n    localStorage.setItem('access_token', token);\r\n  }\r\n\r\n  getBackendUrl(): string {\r\n    if (environment.backend !== '') {\r\n      return environment.backend;\r\n    } else {\r\n      return localStorage.getItem('backend');\r\n    }\r\n  }\r\n\r\n  saveBackendIpAddress(ip: string) {\r\n    localStorage.setItem('backend', ip);\r\n  }\r\n\r\n  getServerConnection(): ServerConnection {\r\n    return this.serverConnection;\r\n  }\r\n\r\n  setupServerConnection() {\r\n    this.serverConnection = new ServerConnection(this.getBackendUrl(), this.getToken());\r\n  }\r\n\r\n  connect() {\r\n    this.serverConnection.connect();\r\n  }\r\n\r\n  // login(param: LoginParameters) {\r\n  //   this.log('Api', 'LoginAgent2');\r\n  //   return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Account/LoginAgent2', param);\r\n  // }\r\n\r\n  // logout() {\r\n  //   // localStorage.removeItem('access_token');\r\n  //   this.log('Api', 'LogoutAgent');\r\n  //   // return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Account/LogoutAgent', {});\r\n  // }\r\n\r\n  // IsAgentAuthenticated() {\r\n  //   this.log('Api', 'IsAgentAuthenticated2');\r\n  //   return this.remote.get(ManagerEnvironment.getBackendUrl() + '/api/Account/IsAgentAuthenticated2', {});\r\n  // }\r\n\r\n  // IsPhoneMapped() {\r\n  //   this.log('Api', 'IsPhoneMapped');\r\n  //   return this.remote.get(ManagerEnvironment.getBackendUrl() + '/api/Account/IsPhoneMapped', {});\r\n  // }\r\n\r\n  // mapPhone(param: DeviceMapParameters) {\r\n  //   this.log('Api', 'AgentLogin');\r\n  //   return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Devices/AgentLogin', param);\r\n  // }\r\n\r\n  // unassignPhone() {\r\n  //   this.log('Api', 'UnassignPhone');\r\n  //   return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Devices/UnassignPhone', {});\r\n  // }\r\n\r\n  // endcall(param: EndCall) {\r\n  //   this.log('Api', 'HangupCall');\r\n  //   return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Call/HangupCall', param);\r\n  // }\r\n\r\n  // calldispositions(param: Calldispositions) {\r\n  //   this.log('Api', 'CallDispositions');\r\n  //   return this.remote.post(ManagerEnvironment.getBackendUrl() + '/api/Call/CallDispositions', param);\r\n  // }\r\n\r\n  // getAgents() {\r\n  //   this.log('Api', 'GetTeamMembers');\r\n  //   return this.remote.get(ManagerEnvironment.getBackendUrl() + '/api/Agents/GetTeamMembers');\r\n  // }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-connect',\r\n  templateUrl: './connect.component.html',\r\n  styleUrls: ['./connect.component.css']\r\n})\r\nexport class ConnectComponent implements OnInit {\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.setupServerConnection();\r\n\r\n    this.service.getServerConnection().connectionState.subscribe((state) => {\r\n      this.service.setAppState({ state: 'Connected' });\r\n    });\r\n\r\n    this.service.connect();\r\n\r\n  }\r\n\r\n}\r\n","<p>\r\n  connect works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServerConnection } from 'jema';\r\nimport { BackendService } from '../_shared/backend.service';\r\nimport { SharedDataService } from '../_shared/shared-data.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\n\r\nexport class DashboardComponent implements OnInit {\r\n  teamLead = false;\r\n  serverConnection: ServerConnection;\r\n\r\n  constructor(private service: BackendService, public recentCall: SharedDataService) {\r\n    this.serverConnection = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.teamLeadFeatures.subscribe((status) => {\r\n      this.teamLead = status;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-5\">\r\n  <!-- Space for Top Bar -->\r\n</div>\r\n\r\n<app-agent-status></app-agent-status>\r\n\r\n<div *ngIf=\"teamLead\">\r\n\r\n  <div class=\"row mt-5\">\r\n    <!-- Space -->\r\n  </div>\r\n\r\n  <xe-queue-monitor-panel [serverConnection]=\"serverConnection\"></xe-queue-monitor-panel>\r\n\r\n  <div class=\"row mt-5\">\r\n    <!-- Space -->\r\n  </div>\r\n\r\n  <xe-team-monitor-panel [serverConnection]=\"serverConnection\"></xe-team-monitor-panel>\r\n\r\n</div>\r\n\r\n<div class=\"row mt-5\">\r\n  <!-- Space -->\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-9\">\r\n    <br />\r\n\r\n    <!-- <app-recent-calls></app-recent-calls> -->\r\n\r\n  </div>\r\n\r\n  <div class=\"col-sm-3\">\r\n    <br>\r\n\r\n    <app-messenger></app-messenger>\r\n\r\n  </div>\r\n</div>","export class ChatMessage {\r\n    agent: string;\r\n    from: string;\r\n    to: string;\r\n    message: string;\r\n    timestamp: string;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from './_shared/backend.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Agent';\r\n\r\n  constructor(private service: BackendService, private router: Router) {\r\n\r\n    this.service.appState.subscribe((state) => {\r\n\r\n      switch (state.state) {\r\n\r\n        case 'Unknown': {\r\n          this.router.navigateByUrl('/server');\r\n          break;\r\n        }\r\n\r\n        case 'ServerFound': {\r\n          this.router.navigateByUrl('/login');\r\n          break;\r\n        }\r\n\r\n        case 'LoggedIn': {\r\n          this.router.navigateByUrl('/connect');\r\n          // this.service.connect();\r\n          break;\r\n        }\r\n\r\n        case 'Connected': {\r\n          this.router.navigateByUrl('/phone');\r\n          break;\r\n        }\r\n\r\n        case 'Ready': {\r\n          const bus = this.service.getServerConnection();\r\n          bus.refreshPhoneState();\r\n          bus.getAgentInfo();\r\n          this.router.navigateByUrl('/');\r\n          break;\r\n        }\r\n\r\n        default: {\r\n          console.log('Unhandled App State: ' + state.state);\r\n          break;\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-app-layout',\r\n  templateUrl: './app-layout.component.html',\r\n  styleUrls: ['./app-layout.component.css']\r\n})\r\nexport class AppLayoutComponent implements OnInit {\r\n\r\n  showFiller = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    window.addEventListener('beforeunload', function (e) {\r\n      const confirmationMessage = '\\o/';\r\n      e.returnValue = confirmationMessage;\r\n      return confirmationMessage;\r\n    });\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light fixed-top flex-md-nowrap shadow  py-0\">\r\n  <a class=\"navbar-brand col-sm-2 col-md-1 mr-0\" href=\"/\">\r\n    <img src=\"assets/logo-old.png\" alt=\"Xema\" width=\"45\" class=\"d-block mx-auto\">\r\n  </a>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <app-nav-topbar></app-nav-topbar>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <nav class=\"col-md-1 d-none d-md-block sidebar\">\r\n      <div class=\"sidebar-sticky\">\r\n        <br>\r\n        <app-nav-sidebar></app-nav-sidebar>\r\n      </div>\r\n    </nav>\r\n    <main role=\"main\" class=\"col-md-11 ml-sm-auto col-lg-11 pl-0\">\r\n      <div class=\"justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TimeagoModule, TimeagoFormatter, TimeagoClock } from 'ngx-timeago';\r\nimport { QueueMonitorPanelModule } from '@xema/queue-monitor-panel';\r\nimport { TeamMonitorPanelModule } from '@xema/team-monitor-panel';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppMaterialComponentsModule } from './app-material.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MatDialogComponent } from './mat-dialog/mat-dialog.component';\r\nimport { ConnectComponent } from './auth/connect/connect.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { PhoneSelectionComponent } from './auth/phone-selection/phone-selection.component';\r\nimport { ServerSelectionComponent } from './auth/server-selection/server-selection.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DispositionToolsComponent } from './_call/disposition-tools/disposition-tools.component';\r\nimport { OngoingStatusComponent } from './_call/ongoing-status/ongoing-status.component';\r\nimport { PhoneStatusComponent } from './_call/phone-status/phone-status.component';\r\nimport { TaskStatusComponent } from './_call/task-status/task-status.component';\r\nimport { AgentListComponent } from './_components/agent-list/agent-list.component';\r\nimport { AgentStatusComponent } from './_components/agent-status/agent-status.component';\r\nimport { MessengerComponent } from './_components/messenger/messenger.component';\r\nimport { RecentCallsComponent } from './_components/recent-calls/recent-calls.component';\r\nimport { AppLayoutComponent } from './_layout/app-layout/app-layout.component';\r\nimport { LoginLayoutComponent } from './_layout/login-layout/login-layout.component';\r\nimport { NavSidebarComponent } from './_navigation/nav-sidebar/nav-sidebar.component';\r\nimport { NavTopbarComponent } from './_navigation/nav-topbar/nav-topbar.component';\r\nimport { CustomClock } from './_code/custom-clock';\r\nimport { CustomFormatter } from './_code/custom-formatter';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PhoneStatusComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    NavTopbarComponent,\r\n    NavSidebarComponent,\r\n    AppLayoutComponent,\r\n    LoginLayoutComponent,\r\n    PhoneSelectionComponent,\r\n    AgentListComponent,\r\n    DispositionToolsComponent,\r\n    MatDialogComponent,\r\n    TaskStatusComponent,\r\n    OngoingStatusComponent,\r\n    AgentStatusComponent,\r\n    MessengerComponent,\r\n    RecentCallsComponent,\r\n    ServerSelectionComponent,\r\n    ConnectComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    AppMaterialComponentsModule,\r\n    QueueMonitorPanelModule,\r\n    TeamMonitorPanelModule,\r\n    TimeagoModule.forRoot({\r\n      formatter: { provide: TimeagoFormatter, useClass: CustomFormatter },\r\n      clock: { provide: TimeagoClock, useClass: CustomClock },\r\n    })\r\n  ],\r\n  entryComponents: [\r\n    MatDialogComponent\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { environment } from '../../environments/environment';\r\n\r\nexport class ManagerEnvironment {\r\n    static getBackendUrl(): string {\r\n        if (environment.backend !== '') {\r\n            return environment.backend;\r\n        } else {\r\n            return localStorage.getItem('backend');\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport Swal from 'sweetalert2';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { Authenticator, ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  manager: string;\r\n  isLoading = false;\r\n  disable: boolean;\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.disable = false;\r\n    this.manager = ManagerEnvironment.getBackendUrl();\r\n\r\n\r\n    // this.service.IsAgentAuthenticated().subscribe(\r\n    //   data => {\r\n    //     this.bus.setAppState({ state: 'LoggedIn' });\r\n    //   },\r\n    //   err => {\r\n    //     console.error(err);\r\n    //   }\r\n    // );\r\n\r\n    this.loginForm = new FormGroup({\r\n      username: new FormControl('', [\r\n        Validators.required, Validators.maxLength(60),\r\n        // Validators.pattern('[a-zA-Z1-9]*')\r\n      ]),\r\n      password: new FormControl('', [Validators.required, Validators.maxLength(100)])\r\n    });\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  submit() {\r\n    this.isLoading = true;\r\n    this.disable = true;\r\n\r\n    const auth = new Authenticator(ManagerEnvironment.getBackendUrl());\r\n    auth.getAuthToken(this.loginForm.value).subscribe(\r\n      (data: any) => {\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        this.service.saveToken(data.auth_token);\r\n        this.service.setAppState({ state: 'LoggedIn' });\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.disable = false;\r\n        if (err.response !== undefined) { err = err.response; }\r\n        if (err.status === 401) {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Authentication failed!',\r\n            text: 'It seems you haven\\'t entered valid credentials. Check your User Name and Password!'\r\n          });\r\n\r\n        } else {\r\n\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: err.message\r\n          });\r\n\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"loginForm\" autocomplete=\"off\" (ngSubmit)=\"submit()\">\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"> </mat-progress-bar>\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title class=\"mb-1\">Agent</mat-card-title>\r\n      <mat-card-subtitle>Welcome back</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        This is a business use computer system and is for authorized use only! Users of this computer system have no\r\n        explicit or implicit expectation of privacy. Any and all user activity, data files, and communications on this\r\n        system may be intercepted, monitored, recorded, copied, audited, inspected, and disclosed to local, state, or\r\n        federal law enforcement, administrators, and/or their authorized agents. By clicking SUBMIT the user agrees to\r\n        the above statement.\r\n      </div>\r\n\r\n      <mat-form-field class=\"w-75\">\r\n        <input matInput type=\"text\" placeholder=\"User Id\" formControlName=\"username\" id=\"username\">\r\n        <mat-error *ngIf=\"hasError('username', 'required')\">User Name is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('username', 'pattern')\">Special characters are not allowed</mat-error>\r\n        <mat-error *ngIf=\"hasError('username', 'maxlength')\">60 characters max.</mat-error>\r\n      </mat-form-field>\r\n\r\n      <br>\r\n      <mat-form-field class=\"w-75\">\r\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" id=\"password\">\r\n        <mat-error *ngIf=\"hasError('password', 'required')\">Password is required</mat-error>\r\n        <mat-error *ngIf=\"hasError('password', 'maxlength')\">Do you really remember this password?</mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions class=\"w-75\">\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!loginForm.valid || disable\">SUBMIT</button>\r\n      <a href=\"{{manager}}\" target=\"_manager\" mat-button color=\"secondary\">MANAGE</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n\r\n</form>","import { Component, OnInit } from \"@angular/core\";\r\nimport { BackendService } from \"../../_shared/backend.service\";\r\nimport { ChatMessage } from \"../../_interfaces/chat.message\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { ServerConnection } from \"jema\";\r\n\r\n@Component({\r\n  selector: \"app-agent-list\",\r\n  templateUrl: \"./agent-list.component.html\",\r\n  styleUrls: [\"./agent-list.component.css\"],\r\n})\r\nexport class AgentListComponent implements OnInit {\r\n  result: any;\r\n  chatMessage: ChatMessage;\r\n  bus: ServerConnection;\r\n  visibleRowIndex: number = null;\r\n  receivedMessage: any;\r\n  // receivedTo: any;\r\n  receivedFromAgent: any;\r\n  receivedFrom: any;\r\n  receivedDate: any;\r\n  today: any;\r\n  group: any;\r\n\r\n  message = new FormControl(\"\", [\r\n    // Validators.required\r\n  ]);\r\n\r\n  constructor(private service: BackendService) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.receivedDate = new Date();\r\n    this.chatMessage = new ChatMessage();\r\n    this.bus.getAgents().subscribe((res) => {\r\n      this.result = res;\r\n      this.group = this.result.find((x) => x.teamName);\r\n    });\r\n\r\n    this.bus.messageReceived.subscribe((res) => {\r\n      this.receivedFromAgent = res.agent;\r\n      this.receivedFrom = res.from;\r\n      // this.receivedTo = res.to;\r\n      this.receivedDate = res.timestamp;\r\n      this.receivedMessage = res.message;\r\n    });\r\n  }\r\n\r\n  sendMessage(agent, group) {\r\n    this.receivedMessage = null;\r\n    this.receivedFrom = null;\r\n    this.today = new Date().toLocaleTimeString();\r\n    this.chatMessage.to = agent !== null ? agent.name : group.teamName;\r\n    this.chatMessage.message = this.message.value;\r\n    this.chatMessage.timestamp = this.today;\r\n    if (agent) {\r\n      this.bus.sendChatMessage(this.chatMessage);\r\n    }\r\n    if (group) {\r\n      this.bus.sendGroupChatMessage(this.chatMessage);\r\n    }\r\n    this.message.reset();\r\n  }\r\n}\r\n","<table class=\"w-100\">\r\n  <tr>\r\n    <a style=\"cursor: pointer\" (click)=\"visibleRowIndex= 0\">\r\n      <p>\r\n        <mat-icon>supervisor_account</mat-icon> <span class=\"user\">{{group?.teamName}}</span>\r\n        <small *ngIf=\"group?.teamName == receivedFrom\" class=\"badge badge-pill badge-danger\">1</small>\r\n      </p>\r\n      <div [hidden]=\"visibleRowIndex !== 0\">\r\n        <form autocomplete=\"off\">\r\n          <div *ngIf=\"group?.teamName == receivedFrom\" class=\"form-group bg-light p-2 shadow border rounded clearfix\">\r\n            <p class=\"text-center mt-n4\">\r\n              <small class=\"bg-white px-2 day-label\">{{receivedDate | date: 'EEEE, MMMM d, y' }}</small>\r\n            </p>\r\n            <p class=\"small\" class=\"text-secondary m-0\"><small>{{receivedFromAgent}}</small> </p>\r\n            <small class=\"float-left\"> {{receivedMessage}} </small>\r\n            <small class=\"text-secondary float-right \">{{ receivedDate | date: 'h:mm a'}}</small>\r\n          </div>\r\n          <div class=\"form-group input-group mt-n3\">\r\n            <textarea class=\"form-control float-left\" placeholder=\"Your message\" [formControl]=\"message\"> </textarea>\r\n            <div class=\"input-group-append ml-n-2\">\r\n              <button class=\"btn btn-info\" type=\"button\" (click)=\"sendMessage(null, group)\">\r\n                <mat-icon>send</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </a>\r\n  </tr>\r\n\r\n  <tr *ngFor=\"let item of result\">\r\n    <a style=\"cursor: pointer\" (click)=\"visibleRowIndex=item.id\">\r\n\r\n      <p>\r\n        <mat-icon>perm_identity</mat-icon> <span class=\"user\"> {{item.name}}</span>\r\n        <small *ngIf=\"item.name == receivedFrom\" class=\"badge badge-pill badge-danger\">1</small>\r\n      </p>\r\n\r\n      <div [hidden]=\"visibleRowIndex !== item.id\">\r\n        <form autocomplete=\"off\">\r\n          <div *ngIf=\"item.name == receivedFrom\" class=\"form-group bg-light p-2 shadow border rounded clearfix\">\r\n            <p class=\"text-center mt-n4\"> <small class=\"bg-white px-2 day-label\">{{receivedDate | date: 'EEEE, MMMM d,\r\n                y' }}</small> </p>\r\n            <small class=\"float-left\"> {{receivedMessage}} </small>\r\n            <small class=\"text-secondary float-right \">{{ receivedDate | date: 'h:mm a'}}</small>\r\n          </div>\r\n          <div class=\"form-group input-group mt-n3\">\r\n            <textarea class=\"form-control float-left\" placeholder=\"Your message\" [formControl]=\"message\"> </textarea>\r\n            <div class=\"input-group-append ml-n-2\">\r\n              <button class=\"btn btn-info\" type=\"button\" (click)=\"sendMessage(item, null)\">\r\n                <mat-icon>send</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </a>\r\n  </tr>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-sidebar',\r\n  templateUrl: './nav-sidebar.component.html',\r\n  styleUrls: ['./nav-sidebar.component.css']\r\n})\r\nexport class NavSidebarComponent implements OnInit {\r\n\r\n  showFiller = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ul class=\"nav flex-column mt-2\">\r\n  <li class=\"nav-item  pb-2\">\r\n    <a class=\"nav-link active\" routerLink=\"/dashboard\">\r\n      <mat-icon>dashboard</mat-icon><br>\r\n      <span data-feather=\"home\"></span>\r\n      Dashboard <span class=\"sr-only\">(current)</span>\r\n    </a>\r\n\r\n  </li>\r\n\r\n  <div class=\"dropdown-divider w-50 d-block mx-auto\"></div>\r\n  <!-- <li class=\"nav-item pt-2\">\r\n        <a class=\"nav-link\" routerLink=\"/dashboard\">\r\n            <mat-icon>headset_mic</mat-icon><br>\r\n            <span data-feather=\"file\"></span>\r\n            Phones\r\n        </a>\r\n    </li>\r\n\r\n    <div class=\"dropdown-divider w-50 d-block mx-auto\"></div> -->\r\n</ul>","import { TimeagoClock } from 'ngx-timeago';\r\nimport { Observable, interval } from 'rxjs';\r\n\r\n// ticks every s\r\nexport class CustomClock extends TimeagoClock {\r\n    tick(then: number): Observable<number> {\r\n        return interval(1000);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport { ActiveCall } from 'src/app/_interfaces/active-call';\r\nimport { Conference } from 'src/app/_interfaces/conference';\r\nimport { Channel } from 'src/app/_interfaces/channel';\r\nimport { ServerConnection } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-ongoing-status',\r\n  templateUrl: './ongoing-status.component.html',\r\n  styleUrls: ['./ongoing-status.component.css']\r\n})\r\nexport class OngoingStatusComponent implements OnInit {\r\n\r\n  bus: ServerConnection;\r\n  ongoingCallsList: Array<ActiveCall>;\r\n  parkedChannelsList: Array<Channel>;\r\n  conferenceCall: Conference;\r\n  unknown = '<unknown>';\r\n\r\n  constructor(private service: BackendService) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.bus.ongoingCalls.subscribe((list) => {\r\n      this.ongoingCallsList = list;\r\n    });\r\n\r\n    this.bus.parkedChannels.subscribe((list) => {\r\n      this.parkedChannelsList = list;\r\n    });\r\n\r\n    this.bus.conferenceCall.subscribe((call) => {\r\n      this.conferenceCall = call;\r\n    });\r\n\r\n  }\r\n\r\n  park(call: ActiveCall) {\r\n    this.bus.hold(call.remoteChannel);\r\n  }\r\n\r\n  resume(call: Channel) {\r\n    this.ongoingCallsList.forEach(otherCall => {\r\n      this.bus.hold(otherCall.remoteChannel);\r\n    });\r\n    this.bus.resume(call.channel);\r\n  }\r\n\r\n}\r\n","<ul class=\"list-unstyled\">\r\n  <li>\r\n    <div *ngFor=\"let call of ongoingCallsList\">\r\n      <button *ngIf=\"call.cli !== unknown\" mat-raised-button color=\"primary\" (click)=\"park(call)\">\r\n        {{call.cli}} &nbsp;\r\n        <i class=\"material-icons pull-right\" style=\"margin-top:6px\">play_arrow</i>\r\n        <!-- {{call.localChannel}} {{call.remoteChannel}} {{call.status}} -->\r\n        <!-- <span *ngIf=\"call.status === 'Parked'\">II</span> -->\r\n        <!-- <span *ngIf=\"call.status === 'Bridged'\">></span> -->\r\n      </button>\r\n    </div>\r\n  </li>\r\n  <li>\r\n    <div>\r\n      <button mat-raised-button color=\"primary\">\r\n      <span  *ngIf=\"conferenceCall?.members.length > 0\">\r\n          {{conferenceCall?.members.length}} &nbsp;\r\n          <i class=\"material-icons pull-right\" style=\"margin-top:6px\">call_split</i>\r\n      </span>  \r\n      </button>\r\n    </div>\r\n\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <div *ngFor=\"let call of parkedChannelsList\" style=\"position:relative;top:-24px;\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"resume(call)\">\r\n        {{call.cli}} &nbsp;\r\n        <i class=\"material-icons pull-right\" style=\"margin-top:6px\">pause</i>\r\n      </button>\r\n    </div>\r\n  </li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BackendService } from 'src/app/_shared/backend.service';\r\nimport { ManagerEnvironment } from 'src/app/_code/manager-environment';\r\nimport { NetworkTester } from 'jema';\r\n\r\n@Component({\r\n  selector: 'app-server-selection',\r\n  templateUrl: './server-selection.component.html',\r\n  styleUrls: ['./server-selection.component.css']\r\n})\r\nexport class ServerSelectionComponent implements OnInit {\r\n\r\n  public serverSelectionForm: FormGroup;\r\n  tester = new NetworkTester();\r\n\r\n  constructor(private service: BackendService) { }\r\n\r\n  ngOnInit() {\r\n    this.serverSelectionForm = new FormGroup({\r\n      serverIp: new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    });\r\n\r\n    if (ManagerEnvironment.getBackendUrl() !== null &&\r\n      ManagerEnvironment.getBackendUrl() !== undefined &&\r\n      ManagerEnvironment.getBackendUrl() !== '') {\r\n      this.service.setAppState({ state: 'ServerFound' });\r\n    } else {\r\n      const detectedServerName = location.hostname + (location.port ? ':' + location.port : '');\r\n      const detectedProtocol = location.protocol;\r\n\r\n      this.tester.ping(detectedProtocol + '//' + detectedServerName).subscribe(() => {\r\n        this.serverSelectionForm.controls['serverIp'].setValue(detectedServerName);\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.serverSelectionForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  saveIpAddress() {\r\n    let url = this.serverSelectionForm.value.serverIp;\r\n\r\n    if (!url.startsWith('http:') && !url.startsWith('https:')) {\r\n      url = location.protocol + '//' + url;\r\n    }\r\n\r\n    this.service.saveBackendIpAddress(url);\r\n    this.service.setAppState({ state: 'ServerFound' });\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"serverSelectionForm\" autocomplete=\"off\" (ngSubmit)=\"saveIpAddress()\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"agent-image\"></div>\r\n      <mat-card-title>Agent</mat-card-title>\r\n      <mat-card-subtitle>Locate a server</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <div class=\"mat-card-subtitle\">\r\n        Welcome here.<br><br>\r\n        Who is serving you calls today? If you haven't found anybody to serve you, we may be able to help you. Talk to\r\n        us!\r\n      </div>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"IP Address\" formControlName=\"serverIp\" id=\"ip\">\r\n        <mat-error *ngIf=\"hasError('serverIp', 'required')\">Server IP Address or URL is required.</mat-error>\r\n        <mat-error *ngIf=\"hasError('serverIp', 'maxlength')\">\r\n          A good IP Address or URL is usually not that long.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [disabled]=\"!serverSelectionForm.valid\">SUBMIT</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</form>","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { BackendService } from \"../../_shared/backend.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SharedDataService } from \"src/app/_shared/shared-data.service\";\r\nimport { ServerConnection } from \"jema\";\r\nimport { MatDialogComponent } from \"src/app/mat-dialog/mat-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: \"app-nav-topbar\",\r\n  templateUrl: \"./nav-topbar.component.html\",\r\n  styleUrls: [\"./nav-topbar.component.css\"],\r\n})\r\nexport class NavTopbarComponent implements OnInit {\r\n  bus: ServerConnection;\r\n  phoneState: any;\r\n  breakState: any;\r\n  info: any;\r\n\r\n  constructor(\r\n    private service: BackendService,\r\n    private router: Router,\r\n    public shared: SharedDataService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.bus = service.getServerConnection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bus.phoneState.subscribe((state) => {\r\n      this.phoneState = state;\r\n    });\r\n\r\n    this.bus.breakState.subscribe((state) => {\r\n      this.breakState = state;\r\n    });\r\n\r\n    this.bus.agentInfo.subscribe((res) => {\r\n      this.info = res;\r\n    });\r\n  }\r\n\r\n  Logoff() {\r\n    // this.bus.logout().subscribe(\r\n    //   data => {\r\n    //     this.service.setAppState({ state: 'Unknown' });\r\n    //     localStorage.removeItem('access_token');\r\n    //     this.router.navigateByUrl('/login');\r\n    //   },\r\n    //   err => {\r\n    //     console.error(err);\r\n    //   }\r\n    // );\r\n\r\n    this.service.setAppState({ state: \"Unknown\" });\r\n    localStorage.removeItem(\"access_token\");\r\n    this.router.navigateByUrl(\"/login\");\r\n  }\r\n\r\n  askBreak() {\r\n    const dialogRef = this.dialog.open(MatDialogComponent, {\r\n      data: { info: this.info },\r\n      disableClose: true,\r\n    });\r\n  }\r\n\r\n  cancelBreak() {\r\n    this.bus.cancelBreak();\r\n  }\r\n\r\n  exitBreak() {\r\n    this.bus.exitBreak();\r\n  }\r\n}\r\n","<ul class=\"navbar-nav mr-auto ml-2 ullist\">\r\n  <li class=\"nav-item active mt-3\">\r\n    <app-phone-status class=\"nav-link\"></app-phone-status>\r\n  </li>\r\n  <li class=\"nav-item mt-3\">\r\n    <app-task-status class=\"nav-link\"></app-task-status>\r\n  </li>\r\n  <li class=\"nav-item mt-3\" *ngIf=\"phoneState.state !== 'NOT_INUSE'\">\r\n    <app-ongoing-status class=\"nav-link\"></app-ongoing-status>\r\n  </li>\r\n  <li class=\"nav-item mt-3\">\r\n    <app-disposition-tools class=\"nav-link\"></app-disposition-tools>\r\n  </li>\r\n</ul>\r\n\r\n<div class=\"text-right position-absolute break signout\">\r\n  <button *ngIf=\"breakState.bsCode === 0\" mat-raised-button color=\"warn\" (click)=\"askBreak()\">Break</button>\r\n  <button *ngIf=\"breakState.bsCode === 1\" mat-raised-button color=\"warn\" (click)=\"cancelBreak()\">Cancel Break</button>\r\n  <button *ngIf=\"breakState.bsCode === 2\" mat-raised-button color=\"accent\" (click)=\"exitBreak()\">Resume</button>\r\n</div>\r\n\r\n<a class=\"nav-link btn btn-sm btn-outline-secondary text-white signout position-absolute\" href=\"\" (click)=\"Logoff()\">\r\n  Logout </a>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-layout',\r\n  templateUrl: './login-layout.component.html',\r\n  styleUrls: ['./login-layout.component.css']\r\n})\r\nexport class LoginLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row wallpaper\">\r\n    <div class=\"col-sm-7\"></div>\r\n    <div class=\"col-sm-4 window\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AppLayoutComponent } from './_layout/app-layout/app-layout.component';\r\nimport { LoginLayoutComponent } from './_layout/login-layout/login-layout.component';\r\nimport { PhoneSelectionComponent } from './auth/phone-selection/phone-selection.component';\r\nimport { ServerSelectionComponent } from './auth/server-selection/server-selection.component';\r\nimport { ConnectComponent } from './auth/connect/connect.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  // application pages\r\n  {\r\n    path: '',\r\n    component: AppLayoutComponent,\r\n    children: [\r\n      { path: '', component: DashboardComponent, pathMatch: 'full' },\r\n    ]\r\n  },\r\n\r\n  // login, forgot password pages\r\n  {\r\n    path: '',\r\n    component: LoginLayoutComponent,\r\n    children: [\r\n      { path: 'server', component: ServerSelectionComponent },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'connect', component: ConnectComponent },\r\n      { path: 'phone', component: PhoneSelectionComponent },\r\n      { path: 'forgot', component: LoginComponent },\r\n    ]\r\n  },\r\n\r\n  // // default route\r\n  // { path: '**', redirectTo: '' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messenger',\r\n  templateUrl: './messenger.component.html',\r\n  styleUrls: ['./messenger.component.css']\r\n})\r\nexport class MessengerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"card my-5 mx-3\">\r\n  <div class=\"user_info card-header clearfix\">\r\n    <p class=\"text-secondary\">\r\n      <mat-icon>message</mat-icon> Team members\r\n    </p>\r\n  </div>\r\n  <div class=\"card-body chatbox\">\r\n    <app-agent-list></app-agent-list>\r\n  </div>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { CallInfo, CallLog } from '../_interfaces/call-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedDataService {\r\n\r\n  constructor() { }\r\n  callinfolist: Array<CallInfo> = [];\r\n  calllog: CallLog;\r\n}\r\n\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}